{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "LambdaRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [{
            "Effect": "Allow",
            "Principal": {"Service": "lambda.amazonaws.com"},
            "Action": "sts:AssumeRole"
          }]
        },
        "ManagedPolicyArns": ["arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"]
      }
    },
    "AllSensesFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "AllSenses-API",
        "Runtime": "python3.11",
        "Handler": "index.handler",
        "Role": {"Fn::GetAtt": ["LambdaRole", "Arn"]},
        "Code": {
          "ZipFile": "import json\ndef handler(event, context):\n    return {\n        'statusCode': 200,\n        'headers': {'Access-Control-Allow-Origin': '*'},\n        'body': json.dumps({'status': 'success', 'message': 'AllSenses AI Guardian is live!', 'data': event})\n    }"
        }
      }
    },
    "Api": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {"Name": "AllSenses-API"}
    },
    "ApiResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "RestApiId": {"Ref": "Api"},
        "ParentId": {"Fn::GetAtt": ["Api", "RootResourceId"]},
        "PathPart": "api"
      }
    },
    "ApiMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "RestApiId": {"Ref": "Api"},
        "ResourceId": {"Ref": "ApiResource"},
        "HttpMethod": "POST",
        "AuthorizationType": "NONE",
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {"Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AllSensesFunction.Arn}/invocations"}
        }
      }
    },
    "LambdaPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {"Ref": "AllSensesFunction"},
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {"Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*/*"}
      }
    },
    "ApiDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "DependsOn": ["ApiMethod"],
      "Properties": {
        "RestApiId": {"Ref": "Api"},
        "StageName": "prod"
      }
    }
  },
  "Outputs": {
    "ApiUrl": {
      "Value": {"Fn::Sub": "https://${Api}.execute-api.${AWS::Region}.amazonaws.com/prod/api"}
    }
  }
}
