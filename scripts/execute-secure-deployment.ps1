# AllSenses AI Guardian - Execute Secure Deployment
# This script performs the actual deployment using pre-configured credentials

<#
Purpose:
- Deploy the CloudFormation stack using AWS CLI
- Reads non-secret parameters from deployment-params.json
- Prints key outputs at the end
#>

param(
  [string] $Region = "us-east-1",
  [string] $StackName = "AllSenses-Stack",
  [string] $TemplateFile = ".\infrastructure\main-deployment.yaml"
)

# Read params generated by setup script
$paramFile = "deployment-params.json"
if (-not (Test-Path $paramFile)) {
  Write-Error "Parameter file '$paramFile' not found. Run secure-deployment-setup.ps1 first."
  exit 1
}
$params = Get-Content $paramFile | ConvertFrom-Json
$NotificationEmail = $params.NotificationEmail
$Environment       = $params.Environment

Write-Host "Deploying stack '$StackName' to region '$Region'..."
Write-Host "Using template: $TemplateFile"
Write-Host "Parameters: NotificationEmail=$NotificationEmail, Environment=$Environment"

# Deploy
aws cloudformation deploy `
  --template-file $TemplateFile `
  --stack-name $StackName `
  --capabilities CAPABILITY_NAMED_IAM `
  --parameter-overrides NotificationEmail="$NotificationEmail" Environment="$Environment" `
  --region $Region

if ($LASTEXITCODE -ne 0) {
  Write-Error "Deployment failed (exit code $LASTEXITCODE). Check CloudFormation events."
  exit $LASTEXITCODE
}

Write-Host "Deployment completed."

# Basic verification and helpful info
Write-Host "Fetching stack outputs..."
$stack = aws cloudformation describe-stacks --stack-name $StackName --region $Region | ConvertFrom-Json
$outputs = $stack.Stacks[0].Outputs
if ($outputs) {
  $outputs | Format-Table OutputKey, OutputValue -AutoSize
} else {
  Write-Host "No outputs were returned by the stack."
}

# Example: show API Gateway invoke URLs if present
try {
  aws apigateway get-rest-apis --region $Region --limit 5
} catch { }

Write-Host "Done. Check CloudFormation -> $StackName for full resource list."
