package com.allsenses.ai.model;

import jakarta.persistence.*;
import jakarta.validation.constraints.*;
import java.time.LocalDateTime;
import java.util.List;

/**
 * JPA entity representing a threat assessment generated by the AI analysis engine.
 * Contains threat detection results, confidence scores, and associated sensor data.
 */
@Entity
@Table(name = "threat_assessments")
public class ThreatAssessment {

    @Id
    @Column(name = "assessment_id", length = 36)
    private String assessmentId;

    @NotNull
    @Column(name = "user_id", nullable = false, length = 36)
    private String userId;

    @NotNull
    @Enumerated(EnumType.STRING)
    @Column(name = "threat_level", nullable = false)
    private ThreatLevel threatLevel;

    @NotNull
    @DecimalMin(value = "0.0", message = "Confidence score must be between 0.0 and 1.0")
    @DecimalMax(value = "1.0", message = "Confidence score must be between 0.0 and 1.0")
    @Column(name = "confidence_score", nullable = false, precision = 3, scale = 2)
    private Double confidenceScore;

    @ElementCollection
    @CollectionTable(name = "threat_sensor_readings", joinColumns = @JoinColumn(name = "assessment_id"))
    private List<SensorReading> sensorData;

    @Embedded
    private LocationData location;

    @NotNull
    @Column(name = "timestamp", nullable = false)
    private LocalDateTime timestamp;

    @NotNull
    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false)
    private AssessmentStatus status;

    @Column(name = "ai_model_version", length = 50)
    private String aiModelVersion;

    @Column(name = "processing_duration_ms")
    private Long processingDurationMs;

    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    // Constructors
    public ThreatAssessment() {
        this.createdAt = LocalDateTime.now();
        this.updatedAt = LocalDateTime.now();
    }

    public ThreatAssessment(String assessmentId, String userId, ThreatLevel threatLevel, 
                           Double confidenceScore, LocationData location) {
        this();
        this.assessmentId = assessmentId;
        this.userId = userId;
        this.threatLevel = threatLevel;
        this.confidenceScore = confidenceScore;
        this.location = location;
        this.timestamp = LocalDateTime.now();
        this.status = AssessmentStatus.PENDING;
    }

    // Lifecycle callbacks
    @PreUpdate
    protected void onUpdate() {
        this.updatedAt = LocalDateTime.now();
    }

    // Business methods
    public boolean isHighThreat() {
        return threatLevel == ThreatLevel.HIGH && confidenceScore >= 0.8;
    }

    public boolean requiresEmergencyResponse() {
        return (threatLevel == ThreatLevel.HIGH && confidenceScore >= 0.9) ||
               (threatLevel == ThreatLevel.CRITICAL && confidenceScore >= 0.7);
    }

    // Getters and Setters
    public String getAssessmentId() {
        return assessmentId;
    }

    public void setAssessmentId(String assessmentId) {
        this.assessmentId = assessmentId;
    }

    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public ThreatLevel getThreatLevel() {
        return threatLevel;
    }

    public void setThreatLevel(ThreatLevel threatLevel) {
        this.threatLevel = threatLevel;
    }

    public Double getConfidenceScore() {
        return confidenceScore;
    }

    public void setConfidenceScore(Double confidenceScore) {
        this.confidenceScore = confidenceScore;
    }

    public List<SensorReading> getSensorData() {
        return sensorData;
    }

    public void setSensorData(List<SensorReading> sensorData) {
        this.sensorData = sensorData;
    }

    public LocationData getLocation() {
        return location;
    }

    public void setLocation(LocationData location) {
        this.location = location;
    }

    public LocalDateTime getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(LocalDateTime timestamp) {
        this.timestamp = timestamp;
    }

    public AssessmentStatus getStatus() {
        return status;
    }

    public void setStatus(AssessmentStatus status) {
        this.status = status;
    }

    public String getAiModelVersion() {
        return aiModelVersion;
    }

    public void setAiModelVersion(String aiModelVersion) {
        this.aiModelVersion = aiModelVersion;
    }

    public Long getProcessingDurationMs() {
        return processingDurationMs;
    }

    public void setProcessingDurationMs(Long processingDurationMs) {
        this.processingDurationMs = processingDurationMs;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    @Override
    public String toString() {
        return "ThreatAssessment{" +
                "assessmentId='" + assessmentId + '\'' +
                ", userId='" + userId + '\'' +
                ", threatLevel=" + threatLevel +
                ", confidenceScore=" + confidenceScore +
                ", timestamp=" + timestamp +
                ", status=" + status +
                '}';
    }
}