package com.allsenses.model;

import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.*;

import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneOffset;
import java.util.List;
import java.util.Map;

/**
 * DynamoDB entity representing a threat assessment generated by the AI analysis engine.
 * Contains threat detection results, confidence scores, and LLM reasoning data.
 * 
 * This entity demonstrates Condition 3 (AI Agent Qualification) by storing
 * LLM reasoning results and autonomous decision data in AWS DynamoDB.
 */
@DynamoDbBean
public class ThreatAssessment {

    private String assessmentId;
    private String userId;
    private String threatLevel;
    private Double confidenceScore;
    private String llmModelUsed;
    private String llmReasoning;
    private String recommendedAction;
    private Map<String, String> sensorData;
    private LocationData location;
    private Instant timestamp;
    private String status;
    private String aiModelVersion;
    private Long processingDurationMs;
    private Integer llmTokensUsed;
    private String rawLlmResponse;
    private Instant createdAt;
    private Instant updatedAt;

    public ThreatAssessment() {
        this.createdAt = Instant.now();
        this.updatedAt = Instant.now();
        this.timestamp = Instant.now();
    }

    // Partition key
    @DynamoDbPartitionKey
    @DynamoDbAttribute("assessmentId")
    public String getAssessmentId() {
        return assessmentId;
    }

    public void setAssessmentId(String assessmentId) {
        this.assessmentId = assessmentId;
    }

    @DynamoDbAttribute("userId")
    public String getUserId() {
        return userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    @DynamoDbAttribute("threatLevel")
    public String getThreatLevel() {
        return threatLevel;
    }

    public void setThreatLevel(String threatLevel) {
        this.threatLevel = threatLevel;
    }

    @DynamoDbAttribute("confidenceScore")
    public Double getConfidenceScore() {
        return confidenceScore;
    }

    public void setConfidenceScore(Double confidenceScore) {
        this.confidenceScore = confidenceScore;
    }

    @DynamoDbAttribute("llmModelUsed")
    public String getLlmModelUsed() {
        return llmModelUsed;
    }

    public void setLlmModelUsed(String llmModelUsed) {
        this.llmModelUsed = llmModelUsed;
    }

    @DynamoDbAttribute("llmReasoning")
    public String getLlmReasoning() {
        return llmReasoning;
    }

    public void setLlmReasoning(String llmReasoning) {
        this.llmReasoning = llmReasoning;
    }

    @DynamoDbAttribute("recommendedAction")
    public String getRecommendedAction() {
        return recommendedAction;
    }

    public void setRecommendedAction(String recommendedAction) {
        this.recommendedAction = recommendedAction;
    }

    @DynamoDbAttribute("sensorData")
    public Map<String, String> getSensorData() {
        return sensorData;
    }

    public void setSensorData(Map<String, String> sensorData) {
        this.sensorData = sensorData;
    }

    @DynamoDbAttribute("location")
    public LocationData getLocation() {
        return location;
    }

    public void setLocation(LocationData location) {
        this.location = location;
    }

    @DynamoDbAttribute("timestamp")
    public Instant getTimestamp() {
        return timestamp;
    }

    public void setTimestamp(Instant timestamp) {
        this.timestamp = timestamp;
    }

    @DynamoDbAttribute("status")
    public String getStatus() {
        return status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    @DynamoDbAttribute("aiModelVersion")
    public String getAiModelVersion() {
        return aiModelVersion;
    }

    public void setAiModelVersion(String aiModelVersion) {
        this.aiModelVersion = aiModelVersion;
    }

    @DynamoDbAttribute("processingDurationMs")
    public Long getProcessingDurationMs() {
        return processingDurationMs;
    }

    public void setProcessingDurationMs(Long processingDurationMs) {
        this.processingDurationMs = processingDurationMs;
    }

    @DynamoDbAttribute("llmTokensUsed")
    public Integer getLlmTokensUsed() {
        return llmTokensUsed;
    }

    public void setLlmTokensUsed(Integer llmTokensUsed) {
        this.llmTokensUsed = llmTokensUsed;
    }

    @DynamoDbAttribute("rawLlmResponse")
    public String getRawLlmResponse() {
        return rawLlmResponse;
    }

    public void setRawLlmResponse(String rawLlmResponse) {
        this.rawLlmResponse = rawLlmResponse;
    }

    @DynamoDbAttribute("createdAt")
    public Instant getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(Instant createdAt) {
        this.createdAt = createdAt;
    }

    @DynamoDbAttribute("updatedAt")
    public Instant getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(Instant updatedAt) {
        this.updatedAt = updatedAt;
    }

    // Business methods
    public boolean isHighThreat() {
        return "HIGH".equals(threatLevel) && confidenceScore != null && confidenceScore >= 0.8;
    }

    public boolean requiresEmergencyResponse() {
        return ("HIGH".equals(threatLevel) && confidenceScore != null && confidenceScore >= 0.9) ||
               ("CRITICAL".equals(threatLevel) && confidenceScore != null && confidenceScore >= 0.7);
    }

    public LocalDateTime getTimestampAsLocalDateTime() {
        return timestamp != null ? LocalDateTime.ofInstant(timestamp, ZoneOffset.UTC) : null;
    }

    public void setTimestampFromLocalDateTime(LocalDateTime localDateTime) {
        this.timestamp = localDateTime != null ? localDateTime.toInstant(ZoneOffset.UTC) : null;
    }

    // Update timestamp on modification
    public void markAsUpdated() {
        this.updatedAt = Instant.now();
    }

    @Override
    public String toString() {
        return "ThreatAssessment{" +
                "assessmentId='" + assessmentId + '\'' +
                ", userId='" + userId + '\'' +
                ", threatLevel='" + threatLevel + '\'' +
                ", confidenceScore=" + confidenceScore +
                ", llmModelUsed='" + llmModelUsed + '\'' +
                ", timestamp=" + timestamp +
                ", status='" + status + '\'' +
                '}';
    }

    /**
     * Location data embedded in threat assessment
     */
    @DynamoDbBean
    public static class LocationData {
        private Double latitude;
        private Double longitude;
        private Double accuracyMeters;
        private String address;
        private String city;
        private String state;
        private String country;
        private Instant locationTimestamp;

        public LocationData() {
            this.locationTimestamp = Instant.now();
        }

        @DynamoDbAttribute("latitude")
        public Double getLatitude() {
            return latitude;
        }

        public void setLatitude(Double latitude) {
            this.latitude = latitude;
        }

        @DynamoDbAttribute("longitude")
        public Double getLongitude() {
            return longitude;
        }

        public void setLongitude(Double longitude) {
            this.longitude = longitude;
        }

        @DynamoDbAttribute("accuracyMeters")
        public Double getAccuracyMeters() {
            return accuracyMeters;
        }

        public void setAccuracyMeters(Double accuracyMeters) {
            this.accuracyMeters = accuracyMeters;
        }

        @DynamoDbAttribute("address")
        public String getAddress() {
            return address;
        }

        public void setAddress(String address) {
            this.address = address;
        }

        @DynamoDbAttribute("city")
        public String getCity() {
            return city;
        }

        public void setCity(String city) {
            this.city = city;
        }

        @DynamoDbAttribute("state")
        public String getState() {
            return state;
        }

        public void setState(String state) {
            this.state = state;
        }

        @DynamoDbAttribute("country")
        public String getCountry() {
            return country;
        }

        public void setCountry(String country) {
            this.country = country;
        }

        @DynamoDbAttribute("locationTimestamp")
        public Instant getLocationTimestamp() {
            return locationTimestamp;
        }

        public void setLocationTimestamp(Instant locationTimestamp) {
            this.locationTimestamp = locationTimestamp;
        }

        public boolean isHighAccuracy() {
            return accuracyMeters != null && accuracyMeters <= 10.0;
        }

        public boolean isValidCoordinates() {
            return latitude != null && longitude != null &&
                   latitude >= -90.0 && latitude <= 90.0 &&
                   longitude >= -180.0 && longitude <= 180.0;
        }

        @Override
        public String toString() {
            return "LocationData{" +
                    "latitude=" + latitude +
                    ", longitude=" + longitude +
                    ", accuracyMeters=" + accuracyMeters +
                    ", address='" + address + '\'' +
                    '}';
        }
    }
}